# Generated by Django 5.2.1 on 2025-05-24 22:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.utils.text import slugify


class Migration(migrations.Migration):

    dependencies = [
        ('facevalue', '0002_comment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='facevalue.comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='avg_rating',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='review_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='slug',
            field=models.SlugField(blank=True, null=True, max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='review',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='review',
            name='rating',
            field=models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('puzzle', 'user'), name='one_review_per_user'),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='puzzles', to='facevalue.tag'),
        ),
        # Populate slug for existing puzzles
        migrations.RunPython(
            code=lambda apps, schema_editor: (
                [setattr(p, 'slug', slugify(p.name)) and p.save() for p in apps.get_model('facevalue', 'Puzzle').objects.all()]
            ),
            reverse_code=migrations.RunPython.noop
        ),
    ]
